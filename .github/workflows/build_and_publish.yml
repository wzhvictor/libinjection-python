name: Build And Publish Wheels And Source Distribution

on:
    push:
        tags:
            - "v*.*.*" # when tag with name 'vX.Y.Z' is pushed to master
    release: # or when a new Release is created&published in GH web interface
        types: [published]
    # Manual run
    workflow_dispatch:

jobs:
    # Build the wheels for Linux, Windows and macOS for Python 3.8 and newer
    build_wheels:
        name: Build wheel for cp${{ matrix.python }}-${{ matrix.platform_id }}-${{ matrix.manylinux_image }}
        runs-on: ${{ matrix.os }}
        strategy:
            # Ensure that a wheel builder finishes even if another fails
            fail-fast: false
            matrix:
                include:
                    # Window 64 bit
                    # Note: windows-2019 is needed for older Python versions:
                    # https://github.com/scikit-learn/scikit-learn/issues/22530
                    - os: windows-2019
                      python: 38
                      bitness: 64
                      platform_id: win_amd64
                    - os: windows-latest
                      python: 39
                      bitness: 64
                      platform_id: win_amd64
                    - os: windows-latest
                      python: 310
                      bitness: 64
                      platform_id: win_amd64

                    # Linux 64 bit manylinux2014
                    - os: ubuntu-latest
                      python: 38
                      bitness: 64
                      platform_id: manylinux_x86_64
                      manylinux_image: manylinux2014
                    - os: ubuntu-latest
                      python: 39
                      bitness: 64
                      platform_id: manylinux_x86_64
                      manylinux_image: manylinux2014
                    - os: ubuntu-latest
                      python: 310
                      bitness: 64
                      platform_id: manylinux_x86_64
                      manylinux_image: manylinux2014

                    # Linux 64 bit musllinux 2014
                    - os: ubuntu-latest
                      python: 38
                      bitness: 64
                      platform_id: musllinux_x86_64
                      manylinux_image: musllinux_1_1
                    - os: ubuntu-latest
                      python: 39
                      bitness: 64
                      platform_id: musllinux_x86_64
                      manylinux_image: musllinux_1_1
                    - os: ubuntu-latest
                      python: 310
                      bitness: 64
                      platform_id: musllinux_x86_64
                      manylinux_image: musllinux_1_1

                    # MacOS x86_64
                    - os: macos-latest
                      bitness: 64
                      python: 38
                      platform_id: macosx_x86_64
                    - os: macos-latest
                      bitness: 64
                      python: 39
                      platform_id: macosx_x86_64
                    - os: macos-latest
                      bitness: 64
                      python: 310
                      platform_id: macosx_x86_64

                    # MacOS arm64
                    - os: macos-latest
                      bitness: 64
                      python: 38
                      platform_id: macosx_arm64
                    - os: macos-latest
                      bitness: 64
                      python: 39
                      platform_id: macosx_arm64
                    - os: macos-latest
                      bitness: 64
                      python: 310
                      platform_id: macosx_arm64

        steps:
            - name: Checkout libinjection-python
              uses: actions/checkout@v1

            - name: Setup Python
              uses: actions/setup-python@v2
              with:
                  python-version: "3.9" # update once build dependencies are available

            - name: Install cibuildwheel
              run: >-
                  python -m
                  pip install
                  cibuildwheel

            - name: Build and test wheels
              env:
                  CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
                  CIBW_ARCHS: all
                  CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
                  CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_image }}
                  CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.manylinux_image }}
                  CIBW_TEST_COMMAND: 'python -c ''import libinjection;libinjection.is_xss("hello")''' # sanity check
                  CIBW_TEST_SKIP: "*-win_amd64"
                  CIBW_BUILD_VERBOSITY: 1

              run: python -m cibuildwheel --output-dir wheelhouse

            - name: Publish wheels to GitHub artifacts
              uses: actions/upload-artifact@v2
              with:
                  name: wheels
                  path: ./wheelhouse/*.whl

            - name: Store artifacts
              uses: actions/upload-artifact@v2
              with:
                  path: wheelhouse/*.whl

    # Build the source distribution under Linux
    build_sdist:
        name: Source distribution
        runs-on: ubuntu-latest
        steps:
            - name: Checkout libinjection-python
              uses: actions/checkout@v1
            - name: Setup Python
              uses: actions/setup-python@v2
              with:
                  python-version: "3.9" # update once build dependencies are available
            - name: Install pypa/build
              run: >-
                  python -m
                  pip install
                  build
                  --user
            - name: Build a source tarball
              run: >-
                  python -m
                  build
                  --sdist
                  --outdir dist/
            - name: Store artifacts
              uses: actions/upload-artifact@v2
              with:
                  path: dist/*.tar.gz
    publish_articfacts:
        name: publish source distribution and wheels to pypi
        runs-on: ubuntu-latest
        needs: [build_sdist, build_wheels]
        steps:
            - name: Checkout libinjection-python
              uses: actions/checkout@v2
            - name: download artifacts
              uses: actions/download-artifact@v3
              with:
                  name: artifact
                  path: dist
            - name: Display structure of downloaded files
              run: ls -lAhR
              working-directory: dist
            - name: Publish distribution ðŸ“¦ to PyPI
              if: startsWith(github.ref, 'refs/tags')
              uses: pypa/gh-action-pypi-publish@master
              with:
                  password: ${{ secrets.PYPI_API_TOKEN }}
